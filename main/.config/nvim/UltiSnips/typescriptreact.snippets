extends typescript

snippet imr
import React from 'react';

endsnippet

snippet pt "prop type" b
type ${1}Props = {
	${2:key}: ${3:string};
};
endsnippet

# I rarely use class components, do I still need these?
snippet rcc "react class component"
class ${1:`!p snip.rv = snip.basename`} extends React.Component {
	render = () => {
		return (
			${0:<div></div>}
		);
	};
};
endsnippet

snippet react-class-component-full
type Props = {};
type State = {};
class ${1:`!p snip.rv = snip.basename`} extends React.Component<Props, State> {
	constructor(props: Props) {
		super(props);
		this.state = {};
	};

	render = () => {
		return (
			${0:<div></div>}
		);
	};
};
endsnippet

snippet rfc "react-function-component"
const ${1:`!p snip.rv = snip.basename`}: React.FC<${2:Props}> = (${3:{}}) => {
	return (
		${0:<div></div>}
	);
};
endsnippet

snippet us "useState"
const [${1:foo}, set${1/\w+\s*/\u$0/}] = React.useState(${2});
endsnippet

snippet ue "useEffect"
React.useEffect(() => {
	${0}
}, []);
endsnippet

snippet sc "styled component"
const ${1:foo} = styled.${2:div}\`
	${0}
\`;
endsnippet

# do I still want this?
snippet styled-component-get-theme
${({ theme }) => ${0}};
endsnippet

# do I still want this?
snippet react-storybook-file
import React from 'react'

import { ${1:foo} } from '.'

export default {
	component: ${1},
	title: 'Components|${1}',
	decorators: [],
}

export const Overview = () => {
	return (
		<${1} />
	)
}
endsnippet
